[gd_scene load_steps=26 format=2]

[ext_resource path="res://Tracks/TestTerrain/TestTerrain.tscn" type="PackedScene" id=1]
[ext_resource path="res://Tracks/Assets/TrackComponents/Sign/M_Sign_D.png" type="Texture" id=2]
[ext_resource path="res://Tracks/SinglePlayerPlayersTracker.gd" type="Script" id=28]
[ext_resource path="res://Tracks/SinglePlayerTrack.gd" type="Script" id=29]

[sub_resource type="VisualShaderNodeVectorCompose" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 0.2

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=6]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 0.571

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "Sign_Texture"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv2"

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShader" id=14]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D Sign_Texture : hint_black_albedo;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:16
	float n_out16p0 = 0.571000;

// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorDecompose:17
	float n_out17p0 = n_out12p0.x;
	float n_out17p1 = n_out12p0.y;
	float n_out17p2 = n_out12p0.z;

// ScalarOp:14
	float n_out14p0 = n_out16p0 * n_out17p0;

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out14p0, n_out17p1, n_in15p2);

// Input:8
	float n_out8p0 = TIME;

// Scalar:13
	float n_out13p0 = 0.200000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 * n_out13p0;

// VectorCompose:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out9p0, n_in10p1, n_in10p2);

// VectorOp:11
	vec3 n_out11p0 = n_out15p0 + n_out10p0;

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(Sign_Texture, n_out11p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// Input:5
	vec3 n_out5p0 = vec3(UV2, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out24p0;
	EMISSION = n_out24p0;
	AO = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -354, -125.5 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 540, 80 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 192, 300 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -8, 422 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -720, 160 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -520, 160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -340, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -120, 40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1080, -160 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -740, 240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -620, -240 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -380, -80 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -860, -260 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -900, -160 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 220, 0 )
nodes/fragment/connections = PoolIntArray( 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0 )

[sub_resource type="ShaderMaterial" id=15]
resource_local_to_scene = true
shader = SubResource( 14 )

[sub_resource type="VisualShader" id=16]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D Sign_Texture : hint_black_albedo;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:16
	float n_out16p0 = 0.571000;

// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorDecompose:17
	float n_out17p0 = n_out12p0.x;
	float n_out17p1 = n_out12p0.y;
	float n_out17p2 = n_out12p0.z;

// ScalarOp:14
	float n_out14p0 = n_out16p0 * n_out17p0;

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out14p0, n_out17p1, n_in15p2);

// Input:8
	float n_out8p0 = TIME;

// Scalar:13
	float n_out13p0 = 0.200000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 * n_out13p0;

// VectorCompose:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out9p0, n_in10p1, n_in10p2);

// VectorOp:11
	vec3 n_out11p0 = n_out15p0 + n_out10p0;

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(Sign_Texture, n_out11p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// Input:5
	vec3 n_out5p0 = vec3(UV2, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out24p0;
	EMISSION = n_out24p0;
	AO = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -354, -125.5 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 540, 80 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 192, 300 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -8, 422 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -720, 160 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -520, 160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -340, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -120, 40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1080, -160 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -740, 240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -620, -240 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -380, -80 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -860, -260 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -900, -160 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 220, 0 )
nodes/fragment/connections = PoolIntArray( 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0 )

[sub_resource type="ShaderMaterial" id=17]
resource_local_to_scene = true
shader = SubResource( 16 )

[sub_resource type="VisualShader" id=18]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D Sign_Texture : hint_black_albedo;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:16
	float n_out16p0 = 0.571000;

// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorDecompose:17
	float n_out17p0 = n_out12p0.x;
	float n_out17p1 = n_out12p0.y;
	float n_out17p2 = n_out12p0.z;

// ScalarOp:14
	float n_out14p0 = n_out16p0 * n_out17p0;

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out14p0, n_out17p1, n_in15p2);

// Input:8
	float n_out8p0 = TIME;

// Scalar:13
	float n_out13p0 = 0.200000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 * n_out13p0;

// VectorCompose:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out9p0, n_in10p1, n_in10p2);

// VectorOp:11
	vec3 n_out11p0 = n_out15p0 + n_out10p0;

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(Sign_Texture, n_out11p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// Input:5
	vec3 n_out5p0 = vec3(UV2, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out24p0;
	EMISSION = n_out24p0;
	AO = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -354, -125.5 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 540, 80 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 192, 300 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -8, 422 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -720, 160 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -520, 160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -340, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -120, 40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1080, -160 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -740, 240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -620, -240 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -380, -80 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -860, -260 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -900, -160 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 220, 0 )
nodes/fragment/connections = PoolIntArray( 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0 )

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
shader = SubResource( 18 )

[sub_resource type="VisualShader" id=20]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, world_vertex_coords;

uniform sampler2D Sign_Texture : hint_black_albedo;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Scalar:16
	float n_out16p0 = 0.571000;

// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorDecompose:17
	float n_out17p0 = n_out12p0.x;
	float n_out17p1 = n_out12p0.y;
	float n_out17p2 = n_out12p0.z;

// ScalarOp:14
	float n_out14p0 = n_out16p0 * n_out17p0;

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out14p0, n_out17p1, n_in15p2);

// Input:8
	float n_out8p0 = TIME;

// Scalar:13
	float n_out13p0 = 0.200000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 * n_out13p0;

// VectorCompose:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out9p0, n_in10p1, n_in10p2);

// VectorOp:11
	vec3 n_out11p0 = n_out15p0 + n_out10p0;

// TextureUniform:24
	vec3 n_out24p0;
	float n_out24p1;
	{
		vec4 n_tex_read = texture(Sign_Texture, n_out11p0.xy);
		n_out24p0 = n_tex_read.rgb;
		n_out24p1 = n_tex_read.a;
	}

// Input:5
	vec3 n_out5p0 = vec3(UV2, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out24p0;
	EMISSION = n_out24p0;
	AO = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -354, -125.5 )
flags/world_vertex_coords = true
nodes/fragment/0/position = Vector2( 540, 80 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 192, 300 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -8, 422 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -720, 160 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -520, 160 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -340, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -120, 40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1080, -160 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -740, 240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -620, -240 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -380, -80 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -860, -260 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -900, -160 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 220, 0 )
nodes/fragment/connections = PoolIntArray( 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0, 9, 0, 10, 0, 10, 0, 11, 1, 8, 0, 9, 0, 5, 0, 4, 0, 4, 0, 0, 6, 13, 0, 9, 1, 15, 0, 11, 0, 12, 0, 17, 0, 17, 1, 15, 1, 17, 0, 14, 1, 16, 0, 14, 0, 14, 0, 15, 0, 24, 0, 0, 0, 24, 0, 0, 5, 11, 0, 24, 0 )

[sub_resource type="ShaderMaterial" id=21]
resource_local_to_scene = true
shader = SubResource( 20 )

[node name="TestTerrain" instance=ExtResource( 1 )]
script = ExtResource( 29 )

[node name="ForwardSign" parent="LevelGeo/Race/Sign3" index="2"]
material/0 = SubResource( 15 )

[node name="ForwardSign" parent="LevelGeo/Race/Sign5" index="2"]
material/0 = SubResource( 17 )

[node name="ForwardSign" parent="LevelGeo/Race/Sign4" index="2"]
material/0 = SubResource( 19 )

[node name="ForwardSign" parent="LevelGeo/Race/Sign6" index="2"]
material/0 = SubResource( 21 )

[node name="Players" parent="." index="1"]
script = ExtResource( 28 )

[node name="PreviewFollow" parent="LevelPreview" index="0"]
offset = nan

[editable path="LevelGeo/Race/Sign3"]
[editable path="LevelGeo/Race/Sign5"]
[editable path="LevelGeo/Race/Sign4"]
[editable path="LevelGeo/Race/Sign6"]
